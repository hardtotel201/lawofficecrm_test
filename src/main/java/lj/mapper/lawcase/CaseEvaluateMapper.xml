<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lj.mapper.lawcase.CaseEvaluateMapper">

  <select id="findAll" resultType="CaseEvaluate">
    select * from CaseEvaluate
  </select>
  
  <select id="findAllByRequestObj" parameterType="CaseEvaluate" resultType="CaseEvaluate">
    select CaseEvaluate.* 
    from CaseEvaluate
    where 1=1
  </select>
 
  <select id="findAllPaged" parameterType="CaseEvaluate" resultType="CaseEvaluate">
    select CaseEvaluate.*,
           CaseInfo.caseName,CaseInfo.caseCode,
           LawyerInfo.lawyerName,
           UserInfo.userName as opUserName
    from CaseEvaluate
    left join CaseInfo   on CaseInfo.caseId=CaseEvaluate.caseId
    left join LawyerInfo on LawyerInfo.lawyerId=CaseInfo.lawyerId
    left join UserInfo   on UserInfo.userId=CaseEvaluate.opUserId
    where 1=1
    <if test=" caseName!=null and caseName!='' ">
      and CaseInfo.caseName  like '%${caseName}%'
    </if>
    order by ${sortField} ${sortType}
  </select>
  
  <select id="findAllLaywerPaged" parameterType="CaseEvaluate" resultType="CaseEvaluate">
    select CaseEvaluate.*,
           CaseInfo.caseName,CaseInfo.caseCode,
           LawyerInfo.lawyerName,
           UserInfo.userName as opUserName
    from CaseEvaluate
    left join CaseInfo   on CaseInfo.caseId=CaseEvaluate.caseId
    left join LawyerInfo on LawyerInfo.lawyerId=CaseInfo.lawyerId
    left join UserInfo   on UserInfo.userId=CaseEvaluate.opUserId
    where 1=1 and CaseInfo.lawyerId is not null
    <if test=" lawyerName!=null and lawyerName!='' ">
      and LawyerInfo.lawyerName  like '%${lawyerName}%'
    </if>
    <if test=" caseName!=null and caseName!='' ">
      and CaseInfo.caseName  like '%${caseName}%'
    </if>
    order by ${sortField} ${sortType}
  </select>
  
  
  
  <select id="findById" parameterType="Long" resultType="CaseEvaluate">
    select * from CaseEvaluate where  caseEvaluateId=#{id}
  </select>
  
  <select id="findAllByField" parameterType="Map" resultType="CaseEvaluate">
    select * from CaseEvaluate where ${fieldName}=#{fieldValue}
  </select>
 
  <insert id="insert" parameterType="CaseEvaluate" flushCache="true" useGeneratedKeys="true" keyProperty="caseEvaluateId" >
      insert into CaseEvaluate( caseId, evaluateTime, evaluateContent, opTime, opUserId)
      values(#{caseId,jdbcType=NUMERIC},#{evaluateTime,jdbcType=TIMESTAMP},#{evaluateContent,jdbcType=VARCHAR},#{opTime,jdbcType=TIMESTAMP},#{opUserId,jdbcType=NUMERIC})
  </insert>
  
   <update id="update" parameterType="CaseEvaluate" >
     update CaseEvaluate 
     set  caseId=#{caseId,jdbcType=NUMERIC},  evaluateTime=#{evaluateTime,jdbcType=TIMESTAMP},  evaluateContent=#{evaluateContent,jdbcType=VARCHAR},  opTime=#{opTime,jdbcType=TIMESTAMP},  opUserId=#{opUserId,jdbcType=NUMERIC} 
     where caseEvaluateId=#{caseEvaluateId}
  </update>
  
  <delete id="deleteById" parameterType="long">
      delete from CaseEvaluate where caseEvaluateId=#{id}
  </delete>
  
</mapper>