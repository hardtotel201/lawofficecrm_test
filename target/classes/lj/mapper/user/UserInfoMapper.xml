<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lj.mapper.user.UserInfoMapper">

	<select id="findById" parameterType="Long" resultType="UserInfo">
		select * from UserInfo where userId = #{userId}
	</select>

	
	<select id="findByUserCode" parameterType="String" resultType="UserInfo">
	   select UserInfo.*,other.userName as opUserName
	   from UserInfo
	   left join UserInfo other on other.userId=UserInfo.opUserId
	   where UserInfo.userCode = #{userCode}
	</select>
	
	<select id="findAllByUserMobile" parameterType="String" resultType="UserInfo">
		select * from UserInfo where userMobile = #{value}
	</select>
	
	<select id="findAllByUserWeixin" parameterType="String" resultType="UserInfo">
		select UserInfo.* ,GROUP_CONCAT(UserRole.roleId) as roleIds
		from UserInfo
		left join UserRole on UserRole.userId = UserInfo.userId
		where userWeixin = #{userWeixin}
		GROUP BY UserInfo.userId
	</select>

	<select id="findAllByUserName" parameterType="String" resultType="UserInfo">
		select * from UserInfo where userName = #{userName}
	</select>
	
	<select id="findAllPaged"  parameterType="UserInfo" resultType="UserInfo">
	   select UserInfo.*,other.userName as opUserName
	   from UserInfo
	   left join UserInfo other on other.userId=UserInfo.opUserId
	   <if test=" roleIds!=null and roleIds!='' ">
		   Inner join UserRole on UserRole.userId=UserInfo.userId and UserRole.roleId in ( ${roleIds} )
	   </if>
	   where 1=1
	   <if test=" userName!=null and userName!='' ">
		   and UserInfo.userName   like '%${userName}%'
	   </if>
	   <if test=" userCode!=null and userCode!='' ">
		   and UserInfo.userCode   like '%${userCode}%'
	   </if>
	   <if test=" userMobile!=null and userMobile!='' ">
		   and UserInfo.userMobile   like '%${userMobile}%'
	   </if>
	   <if test=" registerTimeBegin!=null">
		  and UserInfo.registerTime>#{registerTimeBegin}
		</if>
		<if test=" registerTimeEnd!=null">
		  and #{registerTimeEnd}>UserInfo.registerTime
		</if>
	</select>

	<select id="findAll" resultType="UserInfo">
		select * from UserInfo order by userId
	</select>

	<select id="getNowTime" resultType="java.util.Date">
		select now()
	</select>
	
	<insert id="insert" parameterType="UserInfo" flushCache="true" useGeneratedKeys="true" keyProperty="userId" >
      insert into UserInfo( userName, userWeixin, userSex, userCode, userPassword, registerTime, userState, lastLoginTime, lastLoginAddress, userIdCard, userMobile, userEmail, isDataTotal, opTime, opUserId)
      values(#{userName,jdbcType=VARCHAR},#{userWeixin,jdbcType=VARCHAR},#{userSex,jdbcType=VARCHAR},#{userCode,jdbcType=VARCHAR},#{userPassword,jdbcType=VARCHAR},#{registerTime,jdbcType=TIMESTAMP},#{userState,jdbcType=VARCHAR},#{lastLoginTime,jdbcType=TIMESTAMP},#{lastLoginAddress,jdbcType=VARCHAR},#{userIdCard,jdbcType=VARCHAR},#{userMobile,jdbcType=VARCHAR},#{userEmail,jdbcType=VARCHAR},#{isDataTotal,jdbcType=NUMERIC},#{opTime,jdbcType=TIMESTAMP},#{opUserId,jdbcType=NUMERIC})
   </insert>

	<update id="update" parameterType="UserInfo">
		update UserInfo set
			userCode=#{userCode,jdbcType=VARCHAR},
			userName=#{userName,jdbcType=VARCHAR},
			userSex=#{userSex,jdbcType=VARCHAR},
			userMobile=#{userMobile,jdbcType=VARCHAR},
			userIdCard=#{userIdCard,jdbcType=VARCHAR},
			userEmail=#{userEmail,jdbcType=VARCHAR},
			userState=#{userState,jdbcType=VARCHAR},
			opTime=#{opTime,jdbcType=TIMESTAMP},
			opUserId=#{opUserId,jdbcType=NUMERIC},
			registerTime=#{registerTime,jdbcType=TIMESTAMP},
			lastLoginTime=#{lastLoginTime,jdbcType=TIMESTAMP},
			lastLoginAddress=#{lastLoginAddress,jdbcType=VARCHAR},
			userWeixin=#{userWeixin,jdbcType=VARCHAR}
		where userId=#{userId,jdbcType=NUMERIC}
	</update>

	<update id="changeUserPassword" parameterType="java.util.Map">
		update UserInfo set userPassword=#{userPassword} where userId=#{userId}
	</update>
	
	
	
	<select id="findAllByRoleId" parameterType="long" resultType="UserInfo">
		select userId,userName,userSex,userCode,userPassword,registerTime,lastLoginTime,opTime,opUserId,
		       userIdCard,userEmail,userWeixin,userMobile,userState 
		from UserInfo 
		where userId in ( select userId from UserRole where roleId=#{value} )
	</select>
	
	<select id="findAllSimpleInfos" resultType="UserInfo">
		select userId,userName,userCode
		from UserInfo 
		where userState='正常'  or userState is null
	</select>

	<select id="findAllProgrammer" resultType="UserInfo">
		select UserInfo.*
		from UserInfo
		Inner join UserRole on UserRole.userId=UserInfo.userId
		where  roleId = '4'
	</select>


	<delete id="deleteById" parameterType="long">
		  delete from UserRole where userId=#{id};
	      delete from UserInfo where userId=#{id};
     </delete>
     
</mapper>